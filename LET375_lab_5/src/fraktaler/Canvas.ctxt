#BlueJ class context
comment0.params=frame\ bgColour
comment0.target=Canvas(JFrame,\ Color)
comment0.text=\nCreate\ a\ Canvas.\n@param\ frame\ \ the\ frame\ that\ will\ contain\ this\ canvas\n@param\ width\ \ the\ desired\ width\ for\ the\ canvas\n@param\ height\ \ the\ desired\ height\ for\ the\ canvas\n@param\ bgClour\ \ the\ desired\ background\ colour\ of\ the\ canvas\n\n
comment1.params=visible
comment1.target=void\ setVisible(boolean)
comment1.text=\nSet\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\nwhen\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\nvisible\ canvas\ to\ the\ front\ of\ other\ windows.\n@param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\nthe\ canvas\ (true\ or\ false)\ \n\n
comment10.params=text\ x\ y
comment10.target=void\ eraseString(String,\ int,\ int)
comment10.text=\nErases\ a\ String\ on\ the\ Canvas.\n@param\ \ text\ \ \ \ \ the\ String\ to\ be\ displayed\ \n@param\ \ x\ \ \ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \n@param\ \ y\ \ \ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\n\n
comment11.params=x1\ y1\ x2\ y2
comment11.target=void\ drawLine(int,\ int,\ int,\ int)
comment11.text=\nDraws\ a\ line\ on\ the\ Canvas.\n@param\ \ x1\ \ \ x\ co-ordinate\ of\ start\ of\ line\ \n@param\ \ y1\ \ \ y\ co-ordinate\ of\ start\ of\ line\ \n@param\ \ x2\ \ \ x\ co-ordinate\ of\ end\ of\ line\ \n@param\ \ y2\ \ \ y\ co-ordinate\ of\ end\ of\ line\ \n\n
comment12.params=newColour
comment12.target=void\ setForegroundColour(Color)
comment12.text=\nSets\ the\ foreground\ colour\ of\ the\ Canvas.\n@param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ foreground\ of\ the\ Canvas\ \n\n
comment13.target=Color\ getForegroundColour()
comment13.text=\nReturns\ the\ current\ colour\ of\ the\ foreground.\n@return\ \ \ the\ colour\ of\ the\ foreground\ of\ the\ Canvas\ \n\n
comment14.params=newColour
comment14.target=void\ setBackgroundColour(Color)
comment14.text=\nSets\ the\ background\ colour\ of\ the\ Canvas.\n@param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ background\ of\ the\ Canvas\ \n\n
comment15.target=Color\ getBackgroundColour()
comment15.text=\nReturns\ the\ current\ colour\ of\ the\ background\n@return\ \ \ the\ colour\ of\ the\ background\ of\ the\ Canvas\ \n\n
comment16.params=width\ height
comment16.target=void\ setSize(int,\ int)
comment16.text=\nSets\ the\ size\ of\ the\ canvas.\n@param\ \ width\ \ \ \ new\ width\ \n@param\ \ height\ \ \ new\ height\ \n\n
comment17.params=milliseconds
comment17.target=void\ wait(int)
comment17.text=\nWaits\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\nThis\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\nused\ when\ producing\ animations.\n@param\ \ milliseconds\ \ the\ number\ \n\n
comment18.params=g
comment18.target=void\ paint(Graphics)
comment19.target=void\ toggleTrace()
comment2.target=boolean\ isVisible()
comment2.text=\nProvide\ information\ on\ visibility\ of\ the\ Canvas.\n@return\ \ true\ if\ canvas\ is\ visible,\ false\ otherwise\n\n
comment20.target=void\ repaint()
comment3.params=shape
comment3.target=void\ draw(Shape)
comment3.text=\nDraw\ the\ outline\ of\ a\ given\ shape\ onto\ the\ canvas.\n@param\ \ shape\ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\n\n
comment4.params=shape
comment4.target=void\ fill(Shape)
comment4.text=\nFill\ the\ internal\ dimensions\ of\ a\ given\ shape\ with\ the\ current\ \nforeground\ colour\ of\ the\ canvas.\n@param\ \ shape\ \ the\ shape\ object\ to\ be\ filled\ \n\n
comment5.target=void\ erase()
comment5.text=\nErase\ the\ whole\ canvas.\n\n
comment6.params=shape
comment6.target=void\ erase(Shape)
comment6.text=\nErase\ a\ given\ shape's\ interior\ on\ the\ screen.\n@param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\ \n\n
comment7.params=shape
comment7.target=void\ eraseOutline(Shape)
comment7.text=\nErases\ a\ given\ shape's\ outline\ on\ the\ screen.\n@param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\ \n\n
comment8.params=image\ x\ y
comment8.target=boolean\ drawImage(Image,\ int,\ int)
comment8.text=\nDraws\ an\ image\ onto\ the\ canvas.\n@param\ \ image\ \ \ the\ Image\ object\ to\ be\ displayed\ \n@param\ \ x\ \ \ \ \ \ \ x\ co-ordinate\ for\ Image\ placement\ \n@param\ \ y\ \ \ \ \ \ \ y\ co-ordinate\ for\ Image\ placement\ \n@return\ \ returns\ boolean\ value\ representing\ whether\ the\ image\ was\ \ncompletely\ loaded\ \n\n
comment9.params=text\ x\ y
comment9.target=void\ drawString(String,\ int,\ int)
comment9.text=\nDraws\ a\ String\ on\ the\ Canvas.\n@param\ \ text\ \ \ the\ String\ to\ be\ displayed\ \n@param\ \ x\ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \n@param\ \ y\ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\n\n
numComments=21
