#BlueJ class context
comment0.params=
comment0.target=JunitListTest()
comment1.params=
comment1.target=void\ setUp()
comment1.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment10.params=
comment10.target=void\ testEqualsNullLeftWithException()
comment11.params=
comment11.target=void\ testEqualsNullRightWithException()
comment12.params=
comment12.target=void\ testCopy()
comment13.params=
comment13.target=void\ testCopyWithException()
comment14.params=
comment14.target=void\ testRemoveAll()
comment15.params=
comment15.target=void\ testRemoveAllWithException()
comment16.params=s\ c
comment16.target=java.lang.String\ stringRemoveAll(java.lang.String,\ char)
comment17.params=
comment17.target=void\ testToString()
comment18.params=
comment18.target=void\ testToStringWithException()
comment19.params=
comment19.target=void\ testContains()
comment2.params=
comment2.target=void\ tearDown()
comment2.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment20.params=
comment20.target=void\ testContainsWithException()
comment21.params=
comment21.target=void\ testCopyUpperCase()
comment22.params=
comment22.target=void\ testCopyUpperCaseWithException()
comment23.params=
comment23.target=void\ testAddFirst()
comment24.params=
comment24.target=void\ testAddFirstWithException()
comment25.params=
comment25.target=void\ testAddLast()
comment26.params=
comment26.target=void\ testAddLastWithException()
comment27.params=
comment27.target=void\ testConcat()
comment28.params=
comment28.target=void\ testConcatNullLeftWithException()
comment29.params=
comment29.target=void\ testConcatNullRightWithException()
comment3.params=size
comment3.target=java.lang.String\ randCase(int)
comment30.params=
comment30.target=void\ testAddAll()
comment31.params=
comment31.target=void\ testAddAllNullLeftWithException()
comment32.params=
comment32.target=void\ testAddAllNullRightWithException()
comment33.params=
comment33.target=void\ testReverse()
comment34.params=
comment34.target=void\ testReverseWithException()
comment4.params=s
comment4.target=java.lang.String\ randInjectUpper(java.lang.String)
comment5.params=l\ x
comment5.target=boolean\ containsNode(ListNode,\ ListNode)
comment6.params=l1\ l2
comment6.target=boolean\ hasSharedNodes(ListNode,\ ListNode)
comment7.params=l1\ l2
comment7.target=boolean\ hasAllNodes(ListNode,\ ListNode)
comment8.params=l1\ l2
comment8.target=boolean\ isDistinct(ListNode,\ ListNode)
comment9.params=
comment9.target=void\ testEquals()
numComments=35
